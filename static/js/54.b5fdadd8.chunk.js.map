{"version":3,"file":"static/js/54.b5fdadd8.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx","source/movie-api.jsx"],"sourcesContent":["import { fetchMoviesCast } from 'source/movie-api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCast(movieId).then(res => setCast(res.cast));\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 && (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'No photo'\n                }\n                alt={name}\n                width=\"100px\"\n              ></img>\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'source/movie-api';\nimport { Link } from 'react-router-dom';\nimport { Cast } from 'components/Cast';\nimport { Reviews } from 'components/Reviews';\nimport { Loader } from 'components/Loader';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      {movie !== null && (\n        <div\n          style={{\n            margin: '30px',\n            marginLeft: '40px',\n          }}\n        >\n          <Link to={backLinkLocationRef.current}>\n            <button style={{ marginBottom: '10px' }}>Go back</button>\n          </Link>\n          <div style={{ display: 'flex' }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                  : 'No poster'\n              }\n              alt={movie.original_title}\n              width=\"230px\"\n            ></img>\n            <div style={{ margin: '15px' }}>\n              <h2>\n                {movie.original_title} ({parseInt(movie.release_date)})\n              </h2>\n              <p>User score: {parseInt(movie.vote_average * 10)}%</p>\n              <h3>Overview:</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres:</h3>\n              {movie.genres.length > 0 ? (\n                <ul\n                  style={{\n                    display: 'flex',\n                    listStyle: 'none',\n                    flexDirection: 'row',\n                    gap: '7px',\n                    padding: '0px',\n                  }}\n                >\n                  {' '}\n                  {movie.genres.map(genre => (\n                    <li>{genre.name}</li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No genres</p>\n              )}\n            </div>\n          </div>\n          <h4>Additional information:</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\" element={<Cast></Cast>}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" element={<Reviews></Reviews>}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader></Loader>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'source/movie-api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(res => setReviews(res.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <div>\n          <ul>\n            {reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>There is no reviews yet.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = 'a20001fba40fff44345e5993730d4bd9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchError(url) {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No matches with entered data'));\n  });\n}\n\nexport function fetchTrandingMovies() {\n  return fetchError(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesByInput(input) {\n  return fetchError(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${input}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMoviesCast(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesReviews(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMoviesCast","then","res","length","map","id","profile_path","name","character","src","alt","width","MovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","movie","setMovie","fetchMovieDetails","style","margin","marginLeft","to","current","marginBottom","display","poster_path","original_title","parseInt","release_date","vote_average","overview","genres","listStyle","flexDirection","gap","padding","genre","element","Reviews","Suspense","fallback","Loader","reviews","setReviews","fetchMoviesReviews","results","author","content","API_KEY","BASE_URL","fetchError","url","fetch","response","ok","json","Promise","reject","Error","fetchTrandingMovies","fetchMoviesByInput","input"],"sourceRoot":""}