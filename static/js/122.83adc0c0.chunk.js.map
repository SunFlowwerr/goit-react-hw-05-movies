{"version":3,"file":"static/js/122.83adc0c0.chunk.js","mappings":"iQAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,EAAWI,EAAIC,QAAnB,GACrC,GAAE,CAACT,KAGF,8BACGG,EAAQO,OAAS,GAChB,0BACE,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADE,SASjB,uBAAG,8BAIV,EAED,G,uJChCA,IAAMC,EAAU,mCACVC,EAAW,gCAEjB,SAASC,EAAWC,GAClB,OAAOC,MAAMD,GAAKX,MAAK,SAAAa,GACrB,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,CAEM,SAASC,IACd,OAAOT,EAAW,GAAD,OAAID,EAAJ,sCAA0CD,GAC5D,CAEM,SAASY,EAAkB3B,GAChC,OAAOiB,EAAW,GAAD,OAAID,EAAJ,iBAAqBhB,EAArB,oBAAwCe,GAC1D,CAEM,SAASa,EAAmBC,GACjC,OAAOZ,EAAW,GAAD,OACZD,EADY,gCACoBD,EADpB,kBACqCc,EADrC,8BAGlB,CAEM,SAASC,EAAgB9B,GAC9B,OAAOiB,EAAW,GAAD,OAAID,EAAJ,iBAAqBhB,EAArB,4BAAgDe,GAClE,CAEM,SAAST,EAAmBN,GACjC,OAAOiB,EAAW,GAAD,OAAID,EAAJ,iBAAqBhB,EAArB,4BAAgDe,GAClE,C","sources":["components/Reviews/Reviews.jsx","source/movie-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'source/movie-api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(res => setReviews(res.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <div>\n          <ul>\n            {reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>There is no reviews yet.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = 'a20001fba40fff44345e5993730d4bd9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchError(url) {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No matches with entered data'));\n  });\n}\n\nexport function fetchTrandingMovies() {\n  return fetchError(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesByInput(input) {\n  return fetchError(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${input}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMoviesCast(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesReviews(movieId) {\n  return fetchError(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMoviesReviews","then","res","results","length","map","author","content","id","API_KEY","BASE_URL","fetchError","url","fetch","response","ok","json","Promise","reject","Error","fetchTrandingMovies","fetchMovieDetails","fetchMoviesByInput","input","fetchMoviesCast"],"sourceRoot":""}